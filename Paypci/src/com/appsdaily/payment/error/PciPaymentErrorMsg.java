package com.appsdaily.payment.error;

import java.util.HashMap;

import com.onward.scm.exceptions.AppsDailyErrorMsg;

public class PciPaymentErrorMsg extends AppsDailyErrorMsg {

    // -------------------------------------------------------------------------------

    public static final String TRANSACTION_SYSTEM_ERROR ="An error has occurred";
    public static final String TRANSACTION_INITIALIZE_ERROR ="An error has occurred";
    public static final String UNABLE_TO_PARSE ="An error has occurred";
    public static final String INVALID_PARTNER_ERROR ="An error has occurred";
    public static final String TRANSACTION_ID_FORMAT_ERROR ="An error has occurred";
    public static final String UNABLE_TO_FETCH_TRANSACTION ="Transaction does not exist";
    public static final String INVALID_ACCESS_ERROR ="An error has occurred";
    public static final String USER_AUTHENTICATION_FAILED ="User authentication failed";
    public static final String LOW_BALANCE ="Insufficent Balance in Wallet";
    public static final String INVALID_SCRATCHCARD ="Invalid Scratch Code";
    public static final String SESSION_EXPIRED ="Session Expired";
    public static final String BANK_ERROR_MSG ="Payment declined by bank";
    public static final String INCOMPLETE_TRANSACTION_ERROR ="Transaction Incomplete";
    public static final String UNEXPECTED_ERROR="An error has occurred";

    public static final HashMap< String, String > thirdPartytoAppsDailyErrorMap=new HashMap< String, String >();
    public static final String INVALID_ACCOUNTID_RANDOMID_PAIR ="An error has occurred";
    public static final String UNABLE_TO_SET_BALANCE = "Unable to set balance" ;//not for user
    static{
        thirdPartytoAppsDailyErrorMap.put("IRQ0101","An error has occurred"); //"IRQ0101","A required resource could not be found with the specified parameters. Please contact us if the issue persists.");
        thirdPartytoAppsDailyErrorMap.put("IRQ0102","An error has occurred"); //"IRQ0102","There is an error while decrypting the request parameters");
        thirdPartytoAppsDailyErrorMap.put("IRQ0103","OTP Token has expired. Kindly retry the transaction."); //"IRQ0103","The OTP token is expired");
        thirdPartytoAppsDailyErrorMap.put("IRQ0104","An error has occurred"); //"IRQ0104","A required parameter is missing or invalid");
        thirdPartytoAppsDailyErrorMap.put("IRQ0105","An error has occurred"); //"IRQ0105","The requested change of the subscription state in not valid");
        thirdPartytoAppsDailyErrorMap.put("IRQ0201","An error has occurred"); //"IRQ0201","There is a duplicate parameter passed in the request");
        thirdPartytoAppsDailyErrorMap.put("IRQ0401","An error has occurred"); //"IRQ0401","The request is using incorrect gateway to access the service");
        thirdPartytoAppsDailyErrorMap.put("IRQ0601","An error has occurred"); //"IRQ0601","Required header value is incorrect. For Example Accept: text/plain;");
        thirdPartytoAppsDailyErrorMap.put("ICR0101","An error has occurred"); //"ICR0101","Credentials were incorrect");
        thirdPartytoAppsDailyErrorMap.put("ICR0201","Invalid OTP entered"); //"ICR0201","The OTP pin did not match");
        thirdPartytoAppsDailyErrorMap.put("ICR0301","OTP cannot be blank"); //"ICR0301","");
        thirdPartytoAppsDailyErrorMap.put("ICR0401","An error has occurred"); //"ICR0401","The required credentials are insufficient");
        thirdPartytoAppsDailyErrorMap.put("ISC0101","An error has occurred"); //"ISC0101","Malformed MSISDN provided by the customer");
        thirdPartytoAppsDailyErrorMap.put("ISC0201","An error has occurred"); //"ISC0201","Customer is not authorized for billing (Blacklisted)");
        thirdPartytoAppsDailyErrorMap.put("ISC0301","An error has occurred"); //"ISC0301","Customer is not authorized for billing (in UAT / TESTING phase)(Not Whitelisted)");
        thirdPartytoAppsDailyErrorMap.put("SER0101","An error has occurred"); //"SER0101","Error occurred while sending sms");
        thirdPartytoAppsDailyErrorMap.put("SER0102","An error has occurred"); //"SER0102","Error occurred while sending ussd");
        thirdPartytoAppsDailyErrorMap.put("SER0201","An error has occurred"); //"SER0201","Error occurred during billing");
        thirdPartytoAppsDailyErrorMap.put("SER0401","An error has occurred"); //"SER0401","Error occurred while storing / fetching payment request data");
        thirdPartytoAppsDailyErrorMap.put("SER0501","An error has occurred"); //"SER0501","Error occurred during payment");
        thirdPartytoAppsDailyErrorMap.put("SER0701","An error has occurred"); //"SER0701","Generic Data Store Access Error");
        thirdPartytoAppsDailyErrorMap.put("SER1301","An error has occurred"); //"SER1301","Internal Configuration Error");
        thirdPartytoAppsDailyErrorMap.put("SER1501","An error has occurred"); //"SER1501","Service is marked down for the operator");
        thirdPartytoAppsDailyErrorMap.put("UXE0001","An error has occurred"); //"UXE0001","Unexpected Error");
        thirdPartytoAppsDailyErrorMap.put("CFG0101","An error has occurred"); //"CFG0101","The application is currently not live for the operator");
        thirdPartytoAppsDailyErrorMap.put("CFG0102","An error has occurred"); //"CFG0102","Consent failed due to an error");
        thirdPartytoAppsDailyErrorMap.put("CFG0201","OTP cannot be blank"); //"CFG0201","Required One Time Password(OTP) is missing in the request");
        thirdPartytoAppsDailyErrorMap.put("CFG0301","An error has occurred"); //"CFG0301","Subscription Configuration doesnot exists for the specified operator");
        thirdPartytoAppsDailyErrorMap.put("CFG0401","An error has occurred"); //"CFG0401","Requested Billing Type is not supported");
        thirdPartytoAppsDailyErrorMap.put("ERROR002","An error has occurred"); //"ERROR002","Wrong Request Type parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR003","An error has occurred"); //"ERROR003","Invalid or Empty amount Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR005","An error has occurred"); //"ERROR005","Invalid or Empty Currency Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR006","An error has occurred"); //"ERROR006","Invalid or Empty ITC Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR008","An error has occurred"); //"ERROR008","Empty Request Type Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR009","An error has occurred"); //"ERROR009","Invalid or Empty Return Url Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR022","An error has occurred"); //"ERROR022","Wrong or Empty Return S2S Url Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR023","An error has occurred"); //"ERROR023","Wrong or Empty Shopping cart Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR027","An error has occurred"); //"ERROR027","Invalid or Empty Merchant Code Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR033","An error has occurred"); //"ERROR033","Wrong or Empty TPSL Txn Id Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR035","An error has occurred"); //"ERROR035","Wrong or Empty TPSL Txn Date Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR037","An error has occurred"); //"ERROR037","DECRYPTION ERROR");
        thirdPartytoAppsDailyErrorMap.put("ERROR039","An error has occurred"); //"ERROR039","WRONGÂ or Empty BANK CODE");
        thirdPartytoAppsDailyErrorMap.put("ERROR061","An error has occurred"); //"ERROR061","Checksum Mismatch In Request");
        thirdPartytoAppsDailyErrorMap.put("ERROR063","An error has occurred"); //"ERROR063","tilda(~) not found in end of the 'msg' parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR064","An error has occurred"); //"ERROR064","Checksum Mismatch In Response");
        thirdPartytoAppsDailyErrorMap.put("ERROR065","An error has occurred"); //"ERROR065","Invalid Or Empty web-service locator");
        thirdPartytoAppsDailyErrorMap.put("ERROR066","An error has occurred"); //"ERROR066","Invalid Or Empty TranId/MerchantTxnRef No Required");
        thirdPartytoAppsDailyErrorMap.put("ERROR067","An error has occurred"); //"ERROR067","Balnk Or Invalid Key");
        thirdPartytoAppsDailyErrorMap.put("ERROR068","An error has occurred"); //"ERROR068","Blank Or Invalid IV");
        thirdPartytoAppsDailyErrorMap.put("ERROR069","An error has occurred"); //"ERROR069","Blank Response From PG");
        thirdPartytoAppsDailyErrorMap.put("ERROR070","An error has occurred"); //"ERROR070","Invalid or empty request kit version");
        thirdPartytoAppsDailyErrorMap.put("ERROR071","An error has occurred"); //"ERROR071","Payload Insertion  Fail");
        thirdPartytoAppsDailyErrorMap.put("ERROR072","An error has occurred"); //"ERROR072","Invalid or empty Merchant Txn ref No");
        thirdPartytoAppsDailyErrorMap.put("ERROR073","An error has occurred"); //"ERROR073","ERROR: Incorrect token response format");
        thirdPartytoAppsDailyErrorMap.put("0392","Transaction cancelled"); //"0392","Cancelled_BY_User");
        thirdPartytoAppsDailyErrorMap.put("0395","Transaction cancelled"); //"0395","User Aborted");
        thirdPartytoAppsDailyErrorMap.put("0396","Awating Transaction Status"); //"0396","AWAITED");
        thirdPartytoAppsDailyErrorMap.put("0397","Transaction Aborted"); //"0397","ABORTED");
        thirdPartytoAppsDailyErrorMap.put("0399","Transaction Failed!"); //"0399","FAILED");
        thirdPartytoAppsDailyErrorMap.put("0400","Refund Successful"); //"0400","Refund Successful");
        thirdPartytoAppsDailyErrorMap.put("0401","Refund Successful"); //"0401","Refund Successful");
        thirdPartytoAppsDailyErrorMap.put("0402","Refund Successful"); //"0402","Refund Successful");
        thirdPartytoAppsDailyErrorMap.put("0499","Refund Failed!"); //"0499","Refund Fail");
        thirdPartytoAppsDailyErrorMap.put("9999","Transaction not found!"); //"9999","Transaction Not Found");
        thirdPartytoAppsDailyErrorMap.put("ERROR074","Invalid or Empty Card details"); //"ERROR074","Invalid or empty card id");
        thirdPartytoAppsDailyErrorMap.put("ERROR075","Invalid or Empty Card details"); //"ERROR075","Invalid or empty cust id");
        thirdPartytoAppsDailyErrorMap.put("ERROR077","An error has occurred"); //"ERROR077","ERROR: Empty Property Path Parameter");
        thirdPartytoAppsDailyErrorMap.put("ERROR078","An error has occurred"); //"ERROR078","ERROR: PG Response HASH does not match with Response");
        thirdPartytoAppsDailyErrorMap.put("ERROR079","An error has occurred"); //"ERROR079","ERROR: PG Response Does not have HASH Value");
        thirdPartytoAppsDailyErrorMap.put("ERROR080","An error has occurred"); //"ERROR080","ERROR: PG Response Decryption Fail");
        thirdPartytoAppsDailyErrorMap.put("ERROR081","Card name missing"); //"ERROR081","empty card name");
        thirdPartytoAppsDailyErrorMap.put("ERROR082","Card number missing"); //"ERROR082","empty card no");
        thirdPartytoAppsDailyErrorMap.put("ERROR083","Invalid Card expiry details"); //"ERROR083","Invalid card exp month");
        thirdPartytoAppsDailyErrorMap.put("ERROR084","Invalid Card expiry details"); //"ERROR084","Invalid card exp year");
        thirdPartytoAppsDailyErrorMap.put("ERROR085","An error has occurred"); //"ERROR085","Error while communicating with bank");
        thirdPartytoAppsDailyErrorMap.put("ERROR086","An error has occurred"); //"ERROR086","Error while updating payload");
        thirdPartytoAppsDailyErrorMap.put("ERROR087","Invalid Entry"); //"ERROR087","Selected Bank is not moto type");
        thirdPartytoAppsDailyErrorMap.put("ERROR088","Invalid Entry"); //"ERROR088","Invalid Bank Selection for Merchan");
        thirdPartytoAppsDailyErrorMap.put("ERROR089","Invalid Entry"); //"ERROR089","This_Card_Is_Not_Allowed_For_This_Transaction.");
        thirdPartytoAppsDailyErrorMap.put("ERROR090","Invalid CVV detail"); //"ERROR090","Invalid card CVV");
        thirdPartytoAppsDailyErrorMap.put("ERROR000","An error has occurred"); //"ERROR000","exception in dll (jar)");
        thirdPartytoAppsDailyErrorMap.put("ERROR091","An error has occurred"); //"ERROR091","web_service_request_time_out");
        thirdPartytoAppsDailyErrorMap.put("ERROR0101","An error has occurred"); //"ERROR0101","card_details_not_found_In_pg_vault");
        thirdPartytoAppsDailyErrorMap.put("ERROR0102","An error has occurred"); //"ERROR0102","imps_details_not_found");
        thirdPartytoAppsDailyErrorMap.put("ERROR0103","An error has occurred"); //"ERROR0103","invalid_or_empty_mmid");
        thirdPartytoAppsDailyErrorMap.put("ERROR0104","An error has occurred"); //"ERROR0104","invalid_or_empty_mobile_no");
        thirdPartytoAppsDailyErrorMap.put("ERROR0105","OTP is either missing or Invalid"); //"ERROR0105","invalid_or_empty_otp");
        thirdPartytoAppsDailyErrorMap.put("ERROR0106","An error has occurred"); //"ERROR0106","imps_processing_error");
        thirdPartytoAppsDailyErrorMap.put("ERROR0107","An error has occurred"); //"ERROR0107","dedup_error");
        thirdPartytoAppsDailyErrorMap.put("ERROR0108","An error has occurred"); //"ERROR0108","payload_fail_from_db");
        thirdPartytoAppsDailyErrorMap.put("ERROR300","Refund Successful"); //"ERROR300","Refund successfully submitted");
        thirdPartytoAppsDailyErrorMap.put("ERROR301","An error has occurred"); //"ERROR301","Merchant Code Mismatch In Refund");
        thirdPartytoAppsDailyErrorMap.put("ERROR302","An error has occurred"); //"ERROR302","SRC Amount Mismatch In Refund");
        thirdPartytoAppsDailyErrorMap.put("ERROR303","Refund not allowed for this Transaction"); //"ERROR303","Refund Not Allowed For This Transaction");
        thirdPartytoAppsDailyErrorMap.put("ERROR304","Refund not enabled for this Merchant"); //"ERROR304","REFUND NOT ENABLED FOR MERCHANT");
        thirdPartytoAppsDailyErrorMap.put("ERROR305","Transaction date exceeds Refund date by 90 days"); //"ERROR305","TRANSACTION DATE EXCEED From 90 DAYS In Refund");
        thirdPartytoAppsDailyErrorMap.put("ERROR306","An error has occurred"); //"ERROR306","Refund Error");
        thirdPartytoAppsDailyErrorMap.put("ERROR307","Merchant amount is missing"); //"ERROR307","Requsted Merchant Amt Is Null In Refund");
        thirdPartytoAppsDailyErrorMap.put("ERROR308","Refund amount is missing"); //"ERROR308","Requested Refund Amt Is Null In Refund");
        thirdPartytoAppsDailyErrorMap.put("ERROR0109","An error has occurred"); //"ERROR0109","Invalid_Session");
        thirdPartytoAppsDailyErrorMap.put("ERROR0110","An error has occurred"); //"ERROR0110","Invalid_or_Expire_Token");
        thirdPartytoAppsDailyErrorMap.put("ERROR0111","An error has occurred"); //"ERROR0111","Technical_Error");
        thirdPartytoAppsDailyErrorMap.put("ERROR0112","Bank Authentication Failed!"); //"ERROR0112","Bank_Authentication_Failed");
        thirdPartytoAppsDailyErrorMap.put("ERROR0113","An error has occurred"); //"ERROR0113","Response_Time_Out");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_001","An error has occurred"); //"ERROR_PAYNIMO_001","CONNECTION TIME OUT");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_002","An error has occurred"); //"ERROR_PAYNIMO_002","SERVER DOWN");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_003","An error has occurred"); //"ERROR_PAYNIMO_003","DEFAULT ERROR");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_004","An error has occurred"); //"ERROR_PAYNIMO_004","INVALID URL");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_005","An error has occurred"); //"ERROR_PAYNIMO_005","SSL ERROR");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_006","An error has occurred"); //"ERROR_PAYNIMO_006","UNKNOWN ERROR");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_007","An error has occurred"); //"ERROR_PAYNIMO_007","FILE NOT FOUND");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_008","An error has occurred"); //"ERROR_PAYNIMO_008","INVALID JSON FORMAT");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_009","An error has occurred"); //"ERROR_PAYNIMO_009","WEBVIEW ERROR");
        thirdPartytoAppsDailyErrorMap.put("ERROR_PAYNIMO_010","An error has occurred"); //"ERROR_PAYNIMO_010","SOCKET TIME OUT");
        thirdPartytoAppsDailyErrorMap.put("LOW_BALANCE"," Insufficient balance to process your transaction. Please check your balance and try again."); //"LOW_BALANCE","Failure due to insufficient balance");
        thirdPartytoAppsDailyErrorMap.put("INVALID_SUBSCRIBER","Mobile number Operator mismatch"); //"INVALID_SUBSCRIBER","User not subscriber of the operator selected");
        thirdPartytoAppsDailyErrorMap.put("FREQUENCY_THRESHOLD_VIOLATED","An error has occurred"); //"FREQUENCY_THRESHOLD_VIOLATED","User tries to buy same twice within one minute");
        thirdPartytoAppsDailyErrorMap.put("OPERATOR_SERVICE_FAILURE","An error has occurred"); //"OPERATOR_SERVICE_FAILURE","Operator service down");
        thirdPartytoAppsDailyErrorMap.put("AMOUNT_THRESHOLD_VIOLATED","You've exceeded your purchase limit for the last 30 days."); //"AMOUNT_THRESHOLD_VIOLATED","User's charging exceeds Rs.2500 for last 30 days");
        thirdPartytoAppsDailyErrorMap.put("COCP_VALIDATION_ERROR","An error has occurred"); //"COCP_VALIDATION_ERROR","Company Owned Company Paid-Billing not allowed at operator's end");
        thirdPartytoAppsDailyErrorMap.put("NOT_PROCESSED","An error has occurred"); //"NOT_PROCESSED","User has not entered OTP as of now");
        thirdPartytoAppsDailyErrorMap.put("PRICEPOINT_UNSUPPORTED","Invalid amount entered."); //"PRICEPOINT_UNSUPPORTED","Price Point not supported.");
        thirdPartytoAppsDailyErrorMap.put("INTERNAL_SERVICE_FAILURE","An error has occurred"); //"INTERNAL_SERVICE_FAILURE","Failure due to internal service failure @ iPayy");
        thirdPartytoAppsDailyErrorMap.put("SER0301","An error has occurred"); //"SER0301","Waiver ticket could not be created");
        thirdPartytoAppsDailyErrorMap.put("SER0302","An error has occurred"); //"SER0302","");
        thirdPartytoAppsDailyErrorMap.put("SER0303","An error has occurred"); //"SER0303","Waiver could not be created because of unscuccessful transaction");
        thirdPartytoAppsDailyErrorMap.put("SER0901","An error has occurred"); //"SER0901","Waiver could not be created while processing BPM activity");
        thirdPartytoAppsDailyErrorMap.put("SER1101","An error has occurred"); //"SER1101","");
        thirdPartytoAppsDailyErrorMap.put("SUB0101","An error has occurred"); //"SUB0101","The customer is already subscribed to the product");
        thirdPartytoAppsDailyErrorMap.put("SUB0201","An error has occurred"); //"SUB0201","The product customer is trying to subscribe is already in progress");
        thirdPartytoAppsDailyErrorMap.put("SUB0301","An error has occurred"); //"SUB0301","The subscription package customer is trying is not available for the requested carrier/operator");
        thirdPartytoAppsDailyErrorMap.put("SUB0401","An error has occurred"); //"SUB0401","The requested change of the subscription state in not valid");
        thirdPartytoAppsDailyErrorMap.put("SUB0501","An error has occurred"); //"SUB0501","The requested change of the modification for customer is already in progress}");
    }
}
